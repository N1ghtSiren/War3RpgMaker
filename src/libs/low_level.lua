---
--- Generated by Luanalysis
--- Created by Siren.
--- DateTime: 16.06.2023 13:11
---

local trig_list = {}

---@param playerunitevent playerunitevent
---@param callback fun
function RegisterEvent(playerunitevent, callback)
  local players_max = 15
  local trig = trig_list[playerunitevent]

  if(trig == nil)then
    trig = CreateTrigger()
    trig_list[playerunitevent] = trig

    for i = 0, players_max do
      TriggerRegisterPlayerUnitEvent(trig, Player(i), playerunitevent, nil)
    end
  end

  TriggerAddAction(trig, callback)
end


---@param timeout number
---@param callback fun()
function TimerStartSingle(timeout, callback)
    TimerStart(CreateTimer(), timeout, false, function()
      callback()
      DestroyTimer(GetExpiredTimer())
    end)
end


---@param player player
---@param x real
---@param y real
---@param duration real
function PanCameraToTimedLocal(player, x, y, duration)
  if(GetLocalPlayer() == player)then
    PanCameraToTimed(x, y, duration)
  end
end


---@type fun(u:unit)[]
local initial_func_list= --[[---@type fun(u:unit)[] ]] NewOrderedTable()


---@param func fun(u:unit)
function ForAllInitialUnits(func)
  table.insert(initial_func_list, func)
end


local is_exec_done = false
function ExecuteFuncForAllInitialUnits()
  if(is_exec_done)then return end

  local G = CreateGroup()
  GroupEnumUnitsInRange(G, 0, 0, 99999, nil)
  local n = GroupGetCount(G)

  for i = 0, n-1 do
    local u =  GroupGetUnitByIndex(G, i)
    for _, func in pairs(initial_func_list) do
      func(u)
    end
  end

  GroupClear(G)
  DestroyGroup(G)

  is_exec_done = true
end


local obj_data = {}

--- creates a storage between war3 objects and lua
--- something like hashtable from usage view, but can store anything
---@param obj agent
---@param key any
function SetObjectData(obj, key, value)
  obj_data[obj] = obj_data[obj] or {}
  obj_data[obj][key] = value
  --printdf("set object data: [%s][%s] = %s", obj, key, value)
end


---@param obj agent
---@param key any
function GetObjectData(obj, key)
  --printdf("get object data: [%s][%s] = %s", obj, key, obj_data[obj] and obj_data[obj][key])
  if(obj_data[obj] == nil)then return end

  return obj_data[obj][key]
end


---@param obj agent
function ClearObjectData(obj)
  if(obj_data[obj] == nil)then return end

  obj_data[obj] = nil
end


-- спиздили близзард.ж
function TriggerRegisterEnterRectSimple(trig, rect)
  local reg = CreateRegion()
  RegionAddRect(reg, rect)
  TriggerRegisterEnterRegion(trig, reg, nil)
end


---@param player player
---@param msg string
function DisplayTimedTextToPlayerC(player, msg)
  DisplayTimedTextToPlayer(player, 0, 0, 60, msg)
end


---@param itemid string
function ItemIdToItemName(itemid)
  return GetObjectName(fourcc(itemid))
end

---------------------------------------------------------------------------------------------------

---@param u unit
function FullHealUnit(u)
  SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MAX_MANA))
  SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_MAX_LIFE))
end